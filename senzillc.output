Terminales no usados en gramática

   LABEL
   DOT
   COMENT
   STR


Gramática

    0 $accept: program $end

    1 $@1: %empty

    2 program: LET declarations IN $@1 commands END

    3 declarations: declaration '.'
    4             | declarations declaration '.'

    5 declaration: %empty
    6            | INTEGER id_seq IDENTIFIER
    7            | INTEGER id_seq IDENTIFIER '[' NUMBER ']'
    8            | FUNCTION IDENTIFIER LPAREN id_seq RPAREN ':' INTEGER

    9 id_seq: %empty
   10       | id_seq IDENTIFIER ','
   11       | id_seq IDENTIFIER '[' NUMBER ']' ','

   12 commands: %empty
   13         | commands command ';'

   14 command: SKIP
   15        | READ IDENTIFIER
   16        | WRITE exp
   17        | IDENTIFIER ASSGNOP exp

   18 $@2: %empty

   19 $@3: %empty

   20 $@4: %empty

   21 command: IF bool_exp $@2 THEN commands $@3 ELSE $@4 commands FI

   22 $@5: %empty

   23 $@6: %empty

   24 command: WHILE $@5 bool_exp $@6 DO commands END
   25        | PROCEDURE IDENTIFIER LPAREN id_seq RPAREN "{" commands "}"

   26 bool_exp: exp '<' exp
   27         | exp '=' exp
   28         | exp '>' exp

   29 exp: NUMBER
   30    | IDENTIFIER
   31    | exp '+' exp
   32    | exp '-' exp
   33    | exp '*' exp
   34    | exp '/' exp
   35    | exp '^' exp
   36    | '(' exp ')'


Terminales con las reglas donde aparecen

$end (0) 0
'(' (40) 36
')' (41) 36
'*' (42) 33
'+' (43) 31
',' (44) 10 11
'-' (45) 32
'.' (46) 3 4
'/' (47) 34
':' (58) 8
';' (59) 13
'<' (60) 26
'=' (61) 27
'>' (62) 28
'[' (91) 7 11
']' (93) 7 11
'^' (94) 35
error (256)
NUMBER (258) 7 11 29
IDENTIFIER (259) 6 7 8 10 11 15 17 25 30
LABEL (260)
IF (261) 21
WHILE (262) 24
SKIP (263) 14
THEN (264) 21
ELSE (265) 21
FI (266) 21
DO (267) 24
END (268) 2 24
DOT (269)
FUNCTION (270) 8
INTEGER (271) 6 7 8
READ (272) 15
WRITE (273) 16
LET (274) 2
IN (275) 2
COMENT (276)
ASSGNOP (277) 17
LPAREN (278) 8 25
RPAREN (279) 8 25
STR (280)
PROCEDURE (281) 25
"{" (282) 25
"}" (283) 25


No terminales con las reglas donde aparecen

$accept (45)
    en la izquierda: 0
program (46)
    en la izquierda: 2, en la derecha: 0
$@1 (47)
    en la izquierda: 1, en la derecha: 2
declarations (48)
    en la izquierda: 3 4, en la derecha: 2 4
declaration (49)
    en la izquierda: 5 6 7 8, en la derecha: 3 4
id_seq (50)
    en la izquierda: 9 10 11, en la derecha: 6 7 8 10 11 25
commands (51)
    en la izquierda: 12 13, en la derecha: 2 13 21 24 25
command (52)
    en la izquierda: 14 15 16 17 21 24 25, en la derecha: 13
$@2 (53)
    en la izquierda: 18, en la derecha: 21
$@3 (54)
    en la izquierda: 19, en la derecha: 21
$@4 (55)
    en la izquierda: 20, en la derecha: 21
$@5 (56)
    en la izquierda: 22, en la derecha: 24
$@6 (57)
    en la izquierda: 23, en la derecha: 24
bool_exp (58)
    en la izquierda: 26 27 28, en la derecha: 21 24
exp (59)
    en la izquierda: 29 30 31 32 33 34 35 36, en la derecha: 16 17
    26 27 28 31 32 33 34 35 36


State 0

    0 $accept: . program $end

    LET  desplazar e ir al estado 1

    program  ir al estado 2


State 1

    2 program: LET . declarations IN $@1 commands END

    FUNCTION  desplazar e ir al estado 3
    INTEGER   desplazar e ir al estado 4

    $default  reduce usando la regla 5 (declaration)

    declarations  ir al estado 5
    declaration   ir al estado 6


State 2

    0 $accept: program . $end

    $end  desplazar e ir al estado 7


State 3

    8 declaration: FUNCTION . IDENTIFIER LPAREN id_seq RPAREN ':' INTEGER

    IDENTIFIER  desplazar e ir al estado 8


State 4

    6 declaration: INTEGER . id_seq IDENTIFIER
    7            | INTEGER . id_seq IDENTIFIER '[' NUMBER ']'

    $default  reduce usando la regla 9 (id_seq)

    id_seq  ir al estado 9


State 5

    2 program: LET declarations . IN $@1 commands END
    4 declarations: declarations . declaration '.'

    FUNCTION  desplazar e ir al estado 3
    INTEGER   desplazar e ir al estado 4
    IN        desplazar e ir al estado 10

    $default  reduce usando la regla 5 (declaration)

    declaration  ir al estado 11


State 6

    3 declarations: declaration . '.'

    '.'  desplazar e ir al estado 12


State 7

    0 $accept: program $end .

    $default  aceptar


State 8

    8 declaration: FUNCTION IDENTIFIER . LPAREN id_seq RPAREN ':' INTEGER

    LPAREN  desplazar e ir al estado 13


State 9

    6 declaration: INTEGER id_seq . IDENTIFIER
    7            | INTEGER id_seq . IDENTIFIER '[' NUMBER ']'
   10 id_seq: id_seq . IDENTIFIER ','
   11       | id_seq . IDENTIFIER '[' NUMBER ']' ','

    IDENTIFIER  desplazar e ir al estado 14


State 10

    2 program: LET declarations IN . $@1 commands END

    $default  reduce usando la regla 1 ($@1)

    $@1  ir al estado 15


State 11

    4 declarations: declarations declaration . '.'

    '.'  desplazar e ir al estado 16


State 12

    3 declarations: declaration '.' .

    $default  reduce usando la regla 3 (declarations)


State 13

    8 declaration: FUNCTION IDENTIFIER LPAREN . id_seq RPAREN ':' INTEGER

    $default  reduce usando la regla 9 (id_seq)

    id_seq  ir al estado 17


State 14

    6 declaration: INTEGER id_seq IDENTIFIER .
    7            | INTEGER id_seq IDENTIFIER . '[' NUMBER ']'
   10 id_seq: id_seq IDENTIFIER . ','
   11       | id_seq IDENTIFIER . '[' NUMBER ']' ','

    '['  desplazar e ir al estado 18
    ','  desplazar e ir al estado 19

    $default  reduce usando la regla 6 (declaration)


State 15

    2 program: LET declarations IN $@1 . commands END

    $default  reduce usando la regla 12 (commands)

    commands  ir al estado 20


State 16

    4 declarations: declarations declaration '.' .

    $default  reduce usando la regla 4 (declarations)


State 17

    8 declaration: FUNCTION IDENTIFIER LPAREN id_seq . RPAREN ':' INTEGER
   10 id_seq: id_seq . IDENTIFIER ','
   11       | id_seq . IDENTIFIER '[' NUMBER ']' ','

    IDENTIFIER  desplazar e ir al estado 21
    RPAREN      desplazar e ir al estado 22


State 18

    7 declaration: INTEGER id_seq IDENTIFIER '[' . NUMBER ']'
   11 id_seq: id_seq IDENTIFIER '[' . NUMBER ']' ','

    NUMBER  desplazar e ir al estado 23


State 19

   10 id_seq: id_seq IDENTIFIER ',' .

    $default  reduce usando la regla 10 (id_seq)


State 20

    2 program: LET declarations IN $@1 commands . END
   13 commands: commands . command ';'

    IDENTIFIER  desplazar e ir al estado 24
    IF          desplazar e ir al estado 25
    WHILE       desplazar e ir al estado 26
    SKIP        desplazar e ir al estado 27
    END         desplazar e ir al estado 28
    READ        desplazar e ir al estado 29
    WRITE       desplazar e ir al estado 30
    PROCEDURE   desplazar e ir al estado 31

    command  ir al estado 32


State 21

   10 id_seq: id_seq IDENTIFIER . ','
   11       | id_seq IDENTIFIER . '[' NUMBER ']' ','

    '['  desplazar e ir al estado 33
    ','  desplazar e ir al estado 19


State 22

    8 declaration: FUNCTION IDENTIFIER LPAREN id_seq RPAREN . ':' INTEGER

    ':'  desplazar e ir al estado 34


State 23

    7 declaration: INTEGER id_seq IDENTIFIER '[' NUMBER . ']'
   11 id_seq: id_seq IDENTIFIER '[' NUMBER . ']' ','

    ']'  desplazar e ir al estado 35


State 24

   17 command: IDENTIFIER . ASSGNOP exp

    ASSGNOP  desplazar e ir al estado 36


State 25

   21 command: IF . bool_exp $@2 THEN commands $@3 ELSE $@4 commands FI

    NUMBER      desplazar e ir al estado 37
    IDENTIFIER  desplazar e ir al estado 38
    '('         desplazar e ir al estado 39

    bool_exp  ir al estado 40
    exp       ir al estado 41


State 26

   24 command: WHILE . $@5 bool_exp $@6 DO commands END

    $default  reduce usando la regla 22 ($@5)

    $@5  ir al estado 42


State 27

   14 command: SKIP .

    $default  reduce usando la regla 14 (command)


State 28

    2 program: LET declarations IN $@1 commands END .

    $default  reduce usando la regla 2 (program)


State 29

   15 command: READ . IDENTIFIER

    IDENTIFIER  desplazar e ir al estado 43


State 30

   16 command: WRITE . exp

    NUMBER      desplazar e ir al estado 37
    IDENTIFIER  desplazar e ir al estado 38
    '('         desplazar e ir al estado 39

    exp  ir al estado 44


State 31

   25 command: PROCEDURE . IDENTIFIER LPAREN id_seq RPAREN "{" commands "}"

    IDENTIFIER  desplazar e ir al estado 45


State 32

   13 commands: commands command . ';'

    ';'  desplazar e ir al estado 46


State 33

   11 id_seq: id_seq IDENTIFIER '[' . NUMBER ']' ','

    NUMBER  desplazar e ir al estado 47


State 34

    8 declaration: FUNCTION IDENTIFIER LPAREN id_seq RPAREN ':' . INTEGER

    INTEGER  desplazar e ir al estado 48


State 35

    7 declaration: INTEGER id_seq IDENTIFIER '[' NUMBER ']' .
   11 id_seq: id_seq IDENTIFIER '[' NUMBER ']' . ','

    ','  desplazar e ir al estado 49

    $default  reduce usando la regla 7 (declaration)


State 36

   17 command: IDENTIFIER ASSGNOP . exp

    NUMBER      desplazar e ir al estado 37
    IDENTIFIER  desplazar e ir al estado 38
    '('         desplazar e ir al estado 39

    exp  ir al estado 50


State 37

   29 exp: NUMBER .

    $default  reduce usando la regla 29 (exp)


State 38

   30 exp: IDENTIFIER .

    $default  reduce usando la regla 30 (exp)


State 39

   36 exp: '(' . exp ')'

    NUMBER      desplazar e ir al estado 37
    IDENTIFIER  desplazar e ir al estado 38
    '('         desplazar e ir al estado 39

    exp  ir al estado 51


State 40

   21 command: IF bool_exp . $@2 THEN commands $@3 ELSE $@4 commands FI

    $default  reduce usando la regla 18 ($@2)

    $@2  ir al estado 52


State 41

   26 bool_exp: exp . '<' exp
   27         | exp . '=' exp
   28         | exp . '>' exp
   31 exp: exp . '+' exp
   32    | exp . '-' exp
   33    | exp . '*' exp
   34    | exp . '/' exp
   35    | exp . '^' exp

    '-'  desplazar e ir al estado 53
    '+'  desplazar e ir al estado 54
    '*'  desplazar e ir al estado 55
    '/'  desplazar e ir al estado 56
    '^'  desplazar e ir al estado 57
    '<'  desplazar e ir al estado 58
    '='  desplazar e ir al estado 59
    '>'  desplazar e ir al estado 60


State 42

   24 command: WHILE $@5 . bool_exp $@6 DO commands END

    NUMBER      desplazar e ir al estado 37
    IDENTIFIER  desplazar e ir al estado 38
    '('         desplazar e ir al estado 39

    bool_exp  ir al estado 61
    exp       ir al estado 41


State 43

   15 command: READ IDENTIFIER .

    $default  reduce usando la regla 15 (command)


State 44

   16 command: WRITE exp .
   31 exp: exp . '+' exp
   32    | exp . '-' exp
   33    | exp . '*' exp
   34    | exp . '/' exp
   35    | exp . '^' exp

    '-'  desplazar e ir al estado 53
    '+'  desplazar e ir al estado 54
    '*'  desplazar e ir al estado 55
    '/'  desplazar e ir al estado 56
    '^'  desplazar e ir al estado 57

    $default  reduce usando la regla 16 (command)


State 45

   25 command: PROCEDURE IDENTIFIER . LPAREN id_seq RPAREN "{" commands "}"

    LPAREN  desplazar e ir al estado 62


State 46

   13 commands: commands command ';' .

    $default  reduce usando la regla 13 (commands)


State 47

   11 id_seq: id_seq IDENTIFIER '[' NUMBER . ']' ','

    ']'  desplazar e ir al estado 63


State 48

    8 declaration: FUNCTION IDENTIFIER LPAREN id_seq RPAREN ':' INTEGER .

    $default  reduce usando la regla 8 (declaration)


State 49

   11 id_seq: id_seq IDENTIFIER '[' NUMBER ']' ',' .

    $default  reduce usando la regla 11 (id_seq)


State 50

   17 command: IDENTIFIER ASSGNOP exp .
   31 exp: exp . '+' exp
   32    | exp . '-' exp
   33    | exp . '*' exp
   34    | exp . '/' exp
   35    | exp . '^' exp

    '-'  desplazar e ir al estado 53
    '+'  desplazar e ir al estado 54
    '*'  desplazar e ir al estado 55
    '/'  desplazar e ir al estado 56
    '^'  desplazar e ir al estado 57

    $default  reduce usando la regla 17 (command)


State 51

   31 exp: exp . '+' exp
   32    | exp . '-' exp
   33    | exp . '*' exp
   34    | exp . '/' exp
   35    | exp . '^' exp
   36    | '(' exp . ')'

    '-'  desplazar e ir al estado 53
    '+'  desplazar e ir al estado 54
    '*'  desplazar e ir al estado 55
    '/'  desplazar e ir al estado 56
    '^'  desplazar e ir al estado 57
    ')'  desplazar e ir al estado 64


State 52

   21 command: IF bool_exp $@2 . THEN commands $@3 ELSE $@4 commands FI

    THEN  desplazar e ir al estado 65


State 53

   32 exp: exp '-' . exp

    NUMBER      desplazar e ir al estado 37
    IDENTIFIER  desplazar e ir al estado 38
    '('         desplazar e ir al estado 39

    exp  ir al estado 66


State 54

   31 exp: exp '+' . exp

    NUMBER      desplazar e ir al estado 37
    IDENTIFIER  desplazar e ir al estado 38
    '('         desplazar e ir al estado 39

    exp  ir al estado 67


State 55

   33 exp: exp '*' . exp

    NUMBER      desplazar e ir al estado 37
    IDENTIFIER  desplazar e ir al estado 38
    '('         desplazar e ir al estado 39

    exp  ir al estado 68


State 56

   34 exp: exp '/' . exp

    NUMBER      desplazar e ir al estado 37
    IDENTIFIER  desplazar e ir al estado 38
    '('         desplazar e ir al estado 39

    exp  ir al estado 69


State 57

   35 exp: exp '^' . exp

    NUMBER      desplazar e ir al estado 37
    IDENTIFIER  desplazar e ir al estado 38
    '('         desplazar e ir al estado 39

    exp  ir al estado 70


State 58

   26 bool_exp: exp '<' . exp

    NUMBER      desplazar e ir al estado 37
    IDENTIFIER  desplazar e ir al estado 38
    '('         desplazar e ir al estado 39

    exp  ir al estado 71


State 59

   27 bool_exp: exp '=' . exp

    NUMBER      desplazar e ir al estado 37
    IDENTIFIER  desplazar e ir al estado 38
    '('         desplazar e ir al estado 39

    exp  ir al estado 72


State 60

   28 bool_exp: exp '>' . exp

    NUMBER      desplazar e ir al estado 37
    IDENTIFIER  desplazar e ir al estado 38
    '('         desplazar e ir al estado 39

    exp  ir al estado 73


State 61

   24 command: WHILE $@5 bool_exp . $@6 DO commands END

    $default  reduce usando la regla 23 ($@6)

    $@6  ir al estado 74


State 62

   25 command: PROCEDURE IDENTIFIER LPAREN . id_seq RPAREN "{" commands "}"

    $default  reduce usando la regla 9 (id_seq)

    id_seq  ir al estado 75


State 63

   11 id_seq: id_seq IDENTIFIER '[' NUMBER ']' . ','

    ','  desplazar e ir al estado 49


State 64

   36 exp: '(' exp ')' .

    $default  reduce usando la regla 36 (exp)


State 65

   21 command: IF bool_exp $@2 THEN . commands $@3 ELSE $@4 commands FI

    $default  reduce usando la regla 12 (commands)

    commands  ir al estado 76


State 66

   31 exp: exp . '+' exp
   32    | exp . '-' exp
   32    | exp '-' exp .
   33    | exp . '*' exp
   34    | exp . '/' exp
   35    | exp . '^' exp

    '*'  desplazar e ir al estado 55
    '/'  desplazar e ir al estado 56
    '^'  desplazar e ir al estado 57

    $default  reduce usando la regla 32 (exp)


State 67

   31 exp: exp . '+' exp
   31    | exp '+' exp .
   32    | exp . '-' exp
   33    | exp . '*' exp
   34    | exp . '/' exp
   35    | exp . '^' exp

    '*'  desplazar e ir al estado 55
    '/'  desplazar e ir al estado 56
    '^'  desplazar e ir al estado 57

    $default  reduce usando la regla 31 (exp)


State 68

   31 exp: exp . '+' exp
   32    | exp . '-' exp
   33    | exp . '*' exp
   33    | exp '*' exp .
   34    | exp . '/' exp
   35    | exp . '^' exp

    '^'  desplazar e ir al estado 57

    $default  reduce usando la regla 33 (exp)


State 69

   31 exp: exp . '+' exp
   32    | exp . '-' exp
   33    | exp . '*' exp
   34    | exp . '/' exp
   34    | exp '/' exp .
   35    | exp . '^' exp

    '^'  desplazar e ir al estado 57

    $default  reduce usando la regla 34 (exp)


State 70

   31 exp: exp . '+' exp
   32    | exp . '-' exp
   33    | exp . '*' exp
   34    | exp . '/' exp
   35    | exp . '^' exp
   35    | exp '^' exp .

    '^'  desplazar e ir al estado 57

    $default  reduce usando la regla 35 (exp)


State 71

   26 bool_exp: exp '<' exp .
   31 exp: exp . '+' exp
   32    | exp . '-' exp
   33    | exp . '*' exp
   34    | exp . '/' exp
   35    | exp . '^' exp

    '-'  desplazar e ir al estado 53
    '+'  desplazar e ir al estado 54
    '*'  desplazar e ir al estado 55
    '/'  desplazar e ir al estado 56
    '^'  desplazar e ir al estado 57

    $default  reduce usando la regla 26 (bool_exp)


State 72

   27 bool_exp: exp '=' exp .
   31 exp: exp . '+' exp
   32    | exp . '-' exp
   33    | exp . '*' exp
   34    | exp . '/' exp
   35    | exp . '^' exp

    '-'  desplazar e ir al estado 53
    '+'  desplazar e ir al estado 54
    '*'  desplazar e ir al estado 55
    '/'  desplazar e ir al estado 56
    '^'  desplazar e ir al estado 57

    $default  reduce usando la regla 27 (bool_exp)


State 73

   28 bool_exp: exp '>' exp .
   31 exp: exp . '+' exp
   32    | exp . '-' exp
   33    | exp . '*' exp
   34    | exp . '/' exp
   35    | exp . '^' exp

    '-'  desplazar e ir al estado 53
    '+'  desplazar e ir al estado 54
    '*'  desplazar e ir al estado 55
    '/'  desplazar e ir al estado 56
    '^'  desplazar e ir al estado 57

    $default  reduce usando la regla 28 (bool_exp)


State 74

   24 command: WHILE $@5 bool_exp $@6 . DO commands END

    DO  desplazar e ir al estado 77


State 75

   10 id_seq: id_seq . IDENTIFIER ','
   11       | id_seq . IDENTIFIER '[' NUMBER ']' ','
   25 command: PROCEDURE IDENTIFIER LPAREN id_seq . RPAREN "{" commands "}"

    IDENTIFIER  desplazar e ir al estado 21
    RPAREN      desplazar e ir al estado 78


State 76

   13 commands: commands . command ';'
   21 command: IF bool_exp $@2 THEN commands . $@3 ELSE $@4 commands FI

    IDENTIFIER  desplazar e ir al estado 24
    IF          desplazar e ir al estado 25
    WHILE       desplazar e ir al estado 26
    SKIP        desplazar e ir al estado 27
    READ        desplazar e ir al estado 29
    WRITE       desplazar e ir al estado 30
    PROCEDURE   desplazar e ir al estado 31

    $default  reduce usando la regla 19 ($@3)

    command  ir al estado 32
    $@3      ir al estado 79


State 77

   24 command: WHILE $@5 bool_exp $@6 DO . commands END

    $default  reduce usando la regla 12 (commands)

    commands  ir al estado 80


State 78

   25 command: PROCEDURE IDENTIFIER LPAREN id_seq RPAREN . "{" commands "}"

    "{"  desplazar e ir al estado 81


State 79

   21 command: IF bool_exp $@2 THEN commands $@3 . ELSE $@4 commands FI

    ELSE  desplazar e ir al estado 82


State 80

   13 commands: commands . command ';'
   24 command: WHILE $@5 bool_exp $@6 DO commands . END

    IDENTIFIER  desplazar e ir al estado 24
    IF          desplazar e ir al estado 25
    WHILE       desplazar e ir al estado 26
    SKIP        desplazar e ir al estado 27
    END         desplazar e ir al estado 83
    READ        desplazar e ir al estado 29
    WRITE       desplazar e ir al estado 30
    PROCEDURE   desplazar e ir al estado 31

    command  ir al estado 32


State 81

   25 command: PROCEDURE IDENTIFIER LPAREN id_seq RPAREN "{" . commands "}"

    $default  reduce usando la regla 12 (commands)

    commands  ir al estado 84


State 82

   21 command: IF bool_exp $@2 THEN commands $@3 ELSE . $@4 commands FI

    $default  reduce usando la regla 20 ($@4)

    $@4  ir al estado 85


State 83

   24 command: WHILE $@5 bool_exp $@6 DO commands END .

    $default  reduce usando la regla 24 (command)


State 84

   13 commands: commands . command ';'
   25 command: PROCEDURE IDENTIFIER LPAREN id_seq RPAREN "{" commands . "}"

    IDENTIFIER  desplazar e ir al estado 24
    IF          desplazar e ir al estado 25
    WHILE       desplazar e ir al estado 26
    SKIP        desplazar e ir al estado 27
    READ        desplazar e ir al estado 29
    WRITE       desplazar e ir al estado 30
    PROCEDURE   desplazar e ir al estado 31
    "}"         desplazar e ir al estado 86

    command  ir al estado 32


State 85

   21 command: IF bool_exp $@2 THEN commands $@3 ELSE $@4 . commands FI

    $default  reduce usando la regla 12 (commands)

    commands  ir al estado 87


State 86

   25 command: PROCEDURE IDENTIFIER LPAREN id_seq RPAREN "{" commands "}" .

    $default  reduce usando la regla 25 (command)


State 87

   13 commands: commands . command ';'
   21 command: IF bool_exp $@2 THEN commands $@3 ELSE $@4 commands . FI

    IDENTIFIER  desplazar e ir al estado 24
    IF          desplazar e ir al estado 25
    WHILE       desplazar e ir al estado 26
    SKIP        desplazar e ir al estado 27
    FI          desplazar e ir al estado 88
    READ        desplazar e ir al estado 29
    WRITE       desplazar e ir al estado 30
    PROCEDURE   desplazar e ir al estado 31

    command  ir al estado 32


State 88

   21 command: IF bool_exp $@2 THEN commands $@3 ELSE $@4 commands FI .

    $default  reduce usando la regla 21 (command)

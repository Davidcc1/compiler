Terminales no usados en la gramática

   LABEL
   DOT
   LET
   IN
   LPAREN
   RPAREN
   STR


Gramática

    0 $accept: program $end

    1 $@1: %empty

    2 $@2: %empty

    3 $@3: %empty

    4 $@4: %empty

    5 program: GO $@1 declarations $@2 functions MAIN '{' $@3 commands $@4 '}'

    6 $@5: %empty

    7 program: declarations $@5 commands

    8 functions: %empty
    9          | function functions

   10 $@6: %empty

   11 function: PROCEDURE IDENTIFIER '(' declaration ')' '{' $@6 commands '}'
   12         | error

   13 declarations: declaration '.'
   14             | declarations declaration '.'

   15 declaration: %empty
   16            | INTEGER id_seq IDENTIFIER
   17            | INTEGER id_seq IDENTIFIER '[' NUMBER ']'
   18            | FUNCTION IDENTIFIER '(' id_seq ')' ':' INTEGER

   19 id_seq: %empty
   20       | id_seq IDENTIFIER ','
   21       | id_seq IDENTIFIER '[' NUMBER ']' ','
   22       | FUNCTION IDENTIFIER '(' id_seq ')' ':' INTEGER ','

   23 commands: %empty
   24         | commands command ';'

   25 command: SKIP
   26        | READ IDENTIFIER
   27        | WRITE exp
   28        | IDENTIFIER ASSGNOP exp
   29        | IDENTIFIER '[' exp ']' ASSGNOP exp

   30 $@7: %empty

   31 $@8: %empty

   32 $@9: %empty

   33 command: IF bool_exp $@7 THEN commands $@8 ELSE $@9 commands FI

   34 $@10: %empty

   35 $@11: %empty

   36 command: WHILE $@10 bool_exp $@11 DO commands END
   37        | IDENTIFIER '(' ')'

   38 bool_exp: exp '<' exp
   39         | exp '=' exp
   40         | exp '>' exp

   41 exp: %empty
   42    | NUMBER
   43    | IDENTIFIER
   44    | IDENTIFIER '[' exp ']'
   45    | exp '+' exp
   46    | exp '-' exp
   47    | exp '*' exp
   48    | exp '/' exp
   49    | exp '^' exp
   50    | '(' exp ')'
   51    | IDENTIFIER '(' exp ')'


Terminales con las reglas donde aparecen

$end (0) 0
'(' (40) 11 18 22 37 50 51
')' (41) 11 18 22 37 50 51
'*' (42) 47
'+' (43) 45
',' (44) 20 21 22
'-' (45) 46
'.' (46) 13 14
'/' (47) 48
':' (58) 18 22
';' (59) 24
'<' (60) 38
'=' (61) 39
'>' (62) 40
'[' (91) 17 21 29 44
']' (93) 17 21 29 44
'^' (94) 49
'{' (123) 5 11
'}' (125) 5 11
error (256) 12
NUMBER (258) 17 21 42
IDENTIFIER (259) 11 16 17 18 20 21 22 26 28 29 37 43 44 51
LABEL (260)
IF (261) 33
WHILE (262) 36
PROCEDURE (263) 11
SKIP (264) 25
THEN (265) 33
ELSE (266) 33
FI (267) 33
DO (268) 36
END (269) 36
DOT (270)
FUNCTION (271) 18 22
INTEGER (272) 16 17 18 22
READ (273) 26
WRITE (274) 27
LET (275)
IN (276)
ASSGNOP (277) 28 29
LPAREN (278)
RPAREN (279)
STR (280)
MAIN (281) 5
GO (282) 5


No terminales con las reglas donde aparecen

$accept (46)
    en la izquierda: 0
program (47)
    en la izquierda: 5 7, en la derecha: 0
$@1 (48)
    en la izquierda: 1, en la derecha: 5
$@2 (49)
    en la izquierda: 2, en la derecha: 5
$@3 (50)
    en la izquierda: 3, en la derecha: 5
$@4 (51)
    en la izquierda: 4, en la derecha: 5
$@5 (52)
    en la izquierda: 6, en la derecha: 7
functions (53)
    en la izquierda: 8 9, en la derecha: 5 9
function (54)
    en la izquierda: 11 12, en la derecha: 9
$@6 (55)
    en la izquierda: 10, en la derecha: 11
declarations (56)
    en la izquierda: 13 14, en la derecha: 5 7 14
declaration (57)
    en la izquierda: 15 16 17 18, en la derecha: 11 13 14
id_seq (58)
    en la izquierda: 19 20 21 22, en la derecha: 16 17 18 20 21 22
commands (59)
    en la izquierda: 23 24, en la derecha: 5 7 11 24 33 36
command (60)
    en la izquierda: 25 26 27 28 29 33 36 37, en la derecha: 24
$@7 (61)
    en la izquierda: 30, en la derecha: 33
$@8 (62)
    en la izquierda: 31, en la derecha: 33
$@9 (63)
    en la izquierda: 32, en la derecha: 33
$@10 (64)
    en la izquierda: 34, en la derecha: 36
$@11 (65)
    en la izquierda: 35, en la derecha: 36
bool_exp (66)
    en la izquierda: 38 39 40, en la derecha: 33 36
exp (67)
    en la izquierda: 41 42 43 44 45 46 47 48 49 50 51, en la derecha:
    27 28 29 38 39 40 44 45 46 47 48 49 50 51


Estado 0

    0 $accept: . program $end

    FUNCTION  desplazar e ir al estado 1
    INTEGER   desplazar e ir al estado 2
    GO        desplazar e ir al estado 3

    $default  reduce usando la regla 15 (declaration)

    program       ir al estado 4
    declarations  ir al estado 5
    declaration   ir al estado 6


Estado 1

   18 declaration: FUNCTION . IDENTIFIER '(' id_seq ')' ':' INTEGER

    IDENTIFIER  desplazar e ir al estado 7


Estado 2

   16 declaration: INTEGER . id_seq IDENTIFIER
   17            | INTEGER . id_seq IDENTIFIER '[' NUMBER ']'

    FUNCTION  desplazar e ir al estado 8

    $default  reduce usando la regla 19 (id_seq)

    id_seq  ir al estado 9


Estado 3

    5 program: GO . $@1 declarations $@2 functions MAIN '{' $@3 commands $@4 '}'

    $default  reduce usando la regla 1 ($@1)

    $@1  ir al estado 10


Estado 4

    0 $accept: program . $end

    $end  desplazar e ir al estado 11


Estado 5

    7 program: declarations . $@5 commands
   14 declarations: declarations . declaration '.'

    FUNCTION  desplazar e ir al estado 1
    INTEGER   desplazar e ir al estado 2

    '.'       reduce usando la regla 15 (declaration)
    $default  reduce usando la regla 6 ($@5)

    $@5          ir al estado 12
    declaration  ir al estado 13


Estado 6

   13 declarations: declaration . '.'

    '.'  desplazar e ir al estado 14


Estado 7

   18 declaration: FUNCTION IDENTIFIER . '(' id_seq ')' ':' INTEGER

    '('  desplazar e ir al estado 15


Estado 8

   22 id_seq: FUNCTION . IDENTIFIER '(' id_seq ')' ':' INTEGER ','

    IDENTIFIER  desplazar e ir al estado 16


Estado 9

   16 declaration: INTEGER id_seq . IDENTIFIER
   17            | INTEGER id_seq . IDENTIFIER '[' NUMBER ']'
   20 id_seq: id_seq . IDENTIFIER ','
   21       | id_seq . IDENTIFIER '[' NUMBER ']' ','

    IDENTIFIER  desplazar e ir al estado 17


Estado 10

    5 program: GO $@1 . declarations $@2 functions MAIN '{' $@3 commands $@4 '}'

    FUNCTION  desplazar e ir al estado 1
    INTEGER   desplazar e ir al estado 2

    $default  reduce usando la regla 15 (declaration)

    declarations  ir al estado 18
    declaration   ir al estado 6


Estado 11

    0 $accept: program $end .

    $default  aceptar


Estado 12

    7 program: declarations $@5 . commands

    $default  reduce usando la regla 23 (commands)

    commands  ir al estado 19


Estado 13

   14 declarations: declarations declaration . '.'

    '.'  desplazar e ir al estado 20


Estado 14

   13 declarations: declaration '.' .

    $default  reduce usando la regla 13 (declarations)


Estado 15

   18 declaration: FUNCTION IDENTIFIER '(' . id_seq ')' ':' INTEGER

    FUNCTION  desplazar e ir al estado 8

    $default  reduce usando la regla 19 (id_seq)

    id_seq  ir al estado 21


Estado 16

   22 id_seq: FUNCTION IDENTIFIER . '(' id_seq ')' ':' INTEGER ','

    '('  desplazar e ir al estado 22


Estado 17

   16 declaration: INTEGER id_seq IDENTIFIER .
   17            | INTEGER id_seq IDENTIFIER . '[' NUMBER ']'
   20 id_seq: id_seq IDENTIFIER . ','
   21       | id_seq IDENTIFIER . '[' NUMBER ']' ','

    '['  desplazar e ir al estado 23
    ','  desplazar e ir al estado 24

    $default  reduce usando la regla 16 (declaration)


Estado 18

    5 program: GO $@1 declarations . $@2 functions MAIN '{' $@3 commands $@4 '}'
   14 declarations: declarations . declaration '.'

    FUNCTION  desplazar e ir al estado 1
    INTEGER   desplazar e ir al estado 2

    '.'       reduce usando la regla 15 (declaration)
    $default  reduce usando la regla 2 ($@2)

    $@2          ir al estado 25
    declaration  ir al estado 13


Estado 19

    7 program: declarations $@5 commands .
   24 commands: commands . command ';'

    IDENTIFIER  desplazar e ir al estado 26
    IF          desplazar e ir al estado 27
    WHILE       desplazar e ir al estado 28
    SKIP        desplazar e ir al estado 29
    READ        desplazar e ir al estado 30
    WRITE       desplazar e ir al estado 31

    $default  reduce usando la regla 7 (program)

    command  ir al estado 32


Estado 20

   14 declarations: declarations declaration '.' .

    $default  reduce usando la regla 14 (declarations)


Estado 21

   18 declaration: FUNCTION IDENTIFIER '(' id_seq . ')' ':' INTEGER
   20 id_seq: id_seq . IDENTIFIER ','
   21       | id_seq . IDENTIFIER '[' NUMBER ']' ','

    IDENTIFIER  desplazar e ir al estado 33
    ')'         desplazar e ir al estado 34


Estado 22

   22 id_seq: FUNCTION IDENTIFIER '(' . id_seq ')' ':' INTEGER ','

    FUNCTION  desplazar e ir al estado 8

    $default  reduce usando la regla 19 (id_seq)

    id_seq  ir al estado 35


Estado 23

   17 declaration: INTEGER id_seq IDENTIFIER '[' . NUMBER ']'
   21 id_seq: id_seq IDENTIFIER '[' . NUMBER ']' ','

    NUMBER  desplazar e ir al estado 36


Estado 24

   20 id_seq: id_seq IDENTIFIER ',' .

    $default  reduce usando la regla 20 (id_seq)


Estado 25

    5 program: GO $@1 declarations $@2 . functions MAIN '{' $@3 commands $@4 '}'

    error      desplazar e ir al estado 37
    PROCEDURE  desplazar e ir al estado 38

    MAIN  reduce usando la regla 8 (functions)

    functions  ir al estado 39
    function   ir al estado 40


Estado 26

   28 command: IDENTIFIER . ASSGNOP exp
   29        | IDENTIFIER . '[' exp ']' ASSGNOP exp
   37        | IDENTIFIER . '(' ')'

    ASSGNOP  desplazar e ir al estado 41
    '('      desplazar e ir al estado 42
    '['      desplazar e ir al estado 43


Estado 27

   33 command: IF . bool_exp $@7 THEN commands $@8 ELSE $@9 commands FI

    NUMBER      desplazar e ir al estado 44
    IDENTIFIER  desplazar e ir al estado 45
    '('         desplazar e ir al estado 46

    $default  reduce usando la regla 41 (exp)

    bool_exp  ir al estado 47
    exp       ir al estado 48


Estado 28

   36 command: WHILE . $@10 bool_exp $@11 DO commands END

    $default  reduce usando la regla 34 ($@10)

    $@10  ir al estado 49


Estado 29

   25 command: SKIP .

    $default  reduce usando la regla 25 (command)


Estado 30

   26 command: READ . IDENTIFIER

    IDENTIFIER  desplazar e ir al estado 50


Estado 31

   27 command: WRITE . exp

    NUMBER      desplazar e ir al estado 44
    IDENTIFIER  desplazar e ir al estado 45
    '('         desplazar e ir al estado 46

    $default  reduce usando la regla 41 (exp)

    exp  ir al estado 51


Estado 32

   24 commands: commands command . ';'

    ';'  desplazar e ir al estado 52


Estado 33

   20 id_seq: id_seq IDENTIFIER . ','
   21       | id_seq IDENTIFIER . '[' NUMBER ']' ','

    '['  desplazar e ir al estado 53
    ','  desplazar e ir al estado 24


Estado 34

   18 declaration: FUNCTION IDENTIFIER '(' id_seq ')' . ':' INTEGER

    ':'  desplazar e ir al estado 54


Estado 35

   20 id_seq: id_seq . IDENTIFIER ','
   21       | id_seq . IDENTIFIER '[' NUMBER ']' ','
   22       | FUNCTION IDENTIFIER '(' id_seq . ')' ':' INTEGER ','

    IDENTIFIER  desplazar e ir al estado 33
    ')'         desplazar e ir al estado 55


Estado 36

   17 declaration: INTEGER id_seq IDENTIFIER '[' NUMBER . ']'
   21 id_seq: id_seq IDENTIFIER '[' NUMBER . ']' ','

    ']'  desplazar e ir al estado 56


Estado 37

   12 function: error .

    $default  reduce usando la regla 12 (function)


Estado 38

   11 function: PROCEDURE . IDENTIFIER '(' declaration ')' '{' $@6 commands '}'

    IDENTIFIER  desplazar e ir al estado 57


Estado 39

    5 program: GO $@1 declarations $@2 functions . MAIN '{' $@3 commands $@4 '}'

    MAIN  desplazar e ir al estado 58


Estado 40

    9 functions: function . functions

    error      desplazar e ir al estado 37
    PROCEDURE  desplazar e ir al estado 38

    MAIN  reduce usando la regla 8 (functions)

    functions  ir al estado 59
    function   ir al estado 40


Estado 41

   28 command: IDENTIFIER ASSGNOP . exp

    NUMBER      desplazar e ir al estado 44
    IDENTIFIER  desplazar e ir al estado 45
    '('         desplazar e ir al estado 46

    $default  reduce usando la regla 41 (exp)

    exp  ir al estado 60


Estado 42

   37 command: IDENTIFIER '(' . ')'

    ')'  desplazar e ir al estado 61


Estado 43

   29 command: IDENTIFIER '[' . exp ']' ASSGNOP exp

    NUMBER      desplazar e ir al estado 44
    IDENTIFIER  desplazar e ir al estado 45
    '('         desplazar e ir al estado 46

    $default  reduce usando la regla 41 (exp)

    exp  ir al estado 62


Estado 44

   42 exp: NUMBER .

    $default  reduce usando la regla 42 (exp)


Estado 45

   43 exp: IDENTIFIER .
   44    | IDENTIFIER . '[' exp ']'
   51    | IDENTIFIER . '(' exp ')'

    '('  desplazar e ir al estado 63
    '['  desplazar e ir al estado 64

    $default  reduce usando la regla 43 (exp)


Estado 46

   50 exp: '(' . exp ')'

    NUMBER      desplazar e ir al estado 44
    IDENTIFIER  desplazar e ir al estado 45
    '('         desplazar e ir al estado 46

    $default  reduce usando la regla 41 (exp)

    exp  ir al estado 65


Estado 47

   33 command: IF bool_exp . $@7 THEN commands $@8 ELSE $@9 commands FI

    $default  reduce usando la regla 30 ($@7)

    $@7  ir al estado 66


Estado 48

   38 bool_exp: exp . '<' exp
   39         | exp . '=' exp
   40         | exp . '>' exp
   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . '^' exp

    '-'  desplazar e ir al estado 67
    '+'  desplazar e ir al estado 68
    '*'  desplazar e ir al estado 69
    '/'  desplazar e ir al estado 70
    '^'  desplazar e ir al estado 71
    '<'  desplazar e ir al estado 72
    '='  desplazar e ir al estado 73
    '>'  desplazar e ir al estado 74


Estado 49

   36 command: WHILE $@10 . bool_exp $@11 DO commands END

    NUMBER      desplazar e ir al estado 44
    IDENTIFIER  desplazar e ir al estado 45
    '('         desplazar e ir al estado 46

    $default  reduce usando la regla 41 (exp)

    bool_exp  ir al estado 75
    exp       ir al estado 48


Estado 50

   26 command: READ IDENTIFIER .

    $default  reduce usando la regla 26 (command)


Estado 51

   27 command: WRITE exp .
   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . '^' exp

    '-'  desplazar e ir al estado 67
    '+'  desplazar e ir al estado 68
    '*'  desplazar e ir al estado 69
    '/'  desplazar e ir al estado 70
    '^'  desplazar e ir al estado 71

    $default  reduce usando la regla 27 (command)


Estado 52

   24 commands: commands command ';' .

    $default  reduce usando la regla 24 (commands)


Estado 53

   21 id_seq: id_seq IDENTIFIER '[' . NUMBER ']' ','

    NUMBER  desplazar e ir al estado 76


Estado 54

   18 declaration: FUNCTION IDENTIFIER '(' id_seq ')' ':' . INTEGER

    INTEGER  desplazar e ir al estado 77


Estado 55

   22 id_seq: FUNCTION IDENTIFIER '(' id_seq ')' . ':' INTEGER ','

    ':'  desplazar e ir al estado 78


Estado 56

   17 declaration: INTEGER id_seq IDENTIFIER '[' NUMBER ']' .
   21 id_seq: id_seq IDENTIFIER '[' NUMBER ']' . ','

    ','  desplazar e ir al estado 79

    $default  reduce usando la regla 17 (declaration)


Estado 57

   11 function: PROCEDURE IDENTIFIER . '(' declaration ')' '{' $@6 commands '}'

    '('  desplazar e ir al estado 80


Estado 58

    5 program: GO $@1 declarations $@2 functions MAIN . '{' $@3 commands $@4 '}'

    '{'  desplazar e ir al estado 81


Estado 59

    9 functions: function functions .

    $default  reduce usando la regla 9 (functions)


Estado 60

   28 command: IDENTIFIER ASSGNOP exp .
   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . '^' exp

    '-'  desplazar e ir al estado 67
    '+'  desplazar e ir al estado 68
    '*'  desplazar e ir al estado 69
    '/'  desplazar e ir al estado 70
    '^'  desplazar e ir al estado 71

    $default  reduce usando la regla 28 (command)


Estado 61

   37 command: IDENTIFIER '(' ')' .

    $default  reduce usando la regla 37 (command)


Estado 62

   29 command: IDENTIFIER '[' exp . ']' ASSGNOP exp
   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . '^' exp

    '-'  desplazar e ir al estado 67
    '+'  desplazar e ir al estado 68
    '*'  desplazar e ir al estado 69
    '/'  desplazar e ir al estado 70
    '^'  desplazar e ir al estado 71
    ']'  desplazar e ir al estado 82


Estado 63

   51 exp: IDENTIFIER '(' . exp ')'

    NUMBER      desplazar e ir al estado 44
    IDENTIFIER  desplazar e ir al estado 45
    '('         desplazar e ir al estado 46

    $default  reduce usando la regla 41 (exp)

    exp  ir al estado 83


Estado 64

   44 exp: IDENTIFIER '[' . exp ']'

    NUMBER      desplazar e ir al estado 44
    IDENTIFIER  desplazar e ir al estado 45
    '('         desplazar e ir al estado 46

    $default  reduce usando la regla 41 (exp)

    exp  ir al estado 84


Estado 65

   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . '^' exp
   50    | '(' exp . ')'

    '-'  desplazar e ir al estado 67
    '+'  desplazar e ir al estado 68
    '*'  desplazar e ir al estado 69
    '/'  desplazar e ir al estado 70
    '^'  desplazar e ir al estado 71
    ')'  desplazar e ir al estado 85


Estado 66

   33 command: IF bool_exp $@7 . THEN commands $@8 ELSE $@9 commands FI

    THEN  desplazar e ir al estado 86


Estado 67

   46 exp: exp '-' . exp

    NUMBER      desplazar e ir al estado 44
    IDENTIFIER  desplazar e ir al estado 45
    '('         desplazar e ir al estado 46

    $default  reduce usando la regla 41 (exp)

    exp  ir al estado 87


Estado 68

   45 exp: exp '+' . exp

    NUMBER      desplazar e ir al estado 44
    IDENTIFIER  desplazar e ir al estado 45
    '('         desplazar e ir al estado 46

    $default  reduce usando la regla 41 (exp)

    exp  ir al estado 88


Estado 69

   47 exp: exp '*' . exp

    NUMBER      desplazar e ir al estado 44
    IDENTIFIER  desplazar e ir al estado 45
    '('         desplazar e ir al estado 46

    $default  reduce usando la regla 41 (exp)

    exp  ir al estado 89


Estado 70

   48 exp: exp '/' . exp

    NUMBER      desplazar e ir al estado 44
    IDENTIFIER  desplazar e ir al estado 45
    '('         desplazar e ir al estado 46

    $default  reduce usando la regla 41 (exp)

    exp  ir al estado 90


Estado 71

   49 exp: exp '^' . exp

    NUMBER      desplazar e ir al estado 44
    IDENTIFIER  desplazar e ir al estado 45
    '('         desplazar e ir al estado 46

    $default  reduce usando la regla 41 (exp)

    exp  ir al estado 91


Estado 72

   38 bool_exp: exp '<' . exp

    NUMBER      desplazar e ir al estado 44
    IDENTIFIER  desplazar e ir al estado 45
    '('         desplazar e ir al estado 46

    $default  reduce usando la regla 41 (exp)

    exp  ir al estado 92


Estado 73

   39 bool_exp: exp '=' . exp

    NUMBER      desplazar e ir al estado 44
    IDENTIFIER  desplazar e ir al estado 45
    '('         desplazar e ir al estado 46

    $default  reduce usando la regla 41 (exp)

    exp  ir al estado 93


Estado 74

   40 bool_exp: exp '>' . exp

    NUMBER      desplazar e ir al estado 44
    IDENTIFIER  desplazar e ir al estado 45
    '('         desplazar e ir al estado 46

    $default  reduce usando la regla 41 (exp)

    exp  ir al estado 94


Estado 75

   36 command: WHILE $@10 bool_exp . $@11 DO commands END

    $default  reduce usando la regla 35 ($@11)

    $@11  ir al estado 95


Estado 76

   21 id_seq: id_seq IDENTIFIER '[' NUMBER . ']' ','

    ']'  desplazar e ir al estado 96


Estado 77

   18 declaration: FUNCTION IDENTIFIER '(' id_seq ')' ':' INTEGER .

    $default  reduce usando la regla 18 (declaration)


Estado 78

   22 id_seq: FUNCTION IDENTIFIER '(' id_seq ')' ':' . INTEGER ','

    INTEGER  desplazar e ir al estado 97


Estado 79

   21 id_seq: id_seq IDENTIFIER '[' NUMBER ']' ',' .

    $default  reduce usando la regla 21 (id_seq)


Estado 80

   11 function: PROCEDURE IDENTIFIER '(' . declaration ')' '{' $@6 commands '}'

    FUNCTION  desplazar e ir al estado 1
    INTEGER   desplazar e ir al estado 2

    $default  reduce usando la regla 15 (declaration)

    declaration  ir al estado 98


Estado 81

    5 program: GO $@1 declarations $@2 functions MAIN '{' . $@3 commands $@4 '}'

    $default  reduce usando la regla 3 ($@3)

    $@3  ir al estado 99


Estado 82

   29 command: IDENTIFIER '[' exp ']' . ASSGNOP exp

    ASSGNOP  desplazar e ir al estado 100


Estado 83

   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . '^' exp
   51    | IDENTIFIER '(' exp . ')'

    '-'  desplazar e ir al estado 67
    '+'  desplazar e ir al estado 68
    '*'  desplazar e ir al estado 69
    '/'  desplazar e ir al estado 70
    '^'  desplazar e ir al estado 71
    ')'  desplazar e ir al estado 101


Estado 84

   44 exp: IDENTIFIER '[' exp . ']'
   45    | exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . '^' exp

    '-'  desplazar e ir al estado 67
    '+'  desplazar e ir al estado 68
    '*'  desplazar e ir al estado 69
    '/'  desplazar e ir al estado 70
    '^'  desplazar e ir al estado 71
    ']'  desplazar e ir al estado 102


Estado 85

   50 exp: '(' exp ')' .

    $default  reduce usando la regla 50 (exp)


Estado 86

   33 command: IF bool_exp $@7 THEN . commands $@8 ELSE $@9 commands FI

    $default  reduce usando la regla 23 (commands)

    commands  ir al estado 103


Estado 87

   45 exp: exp . '+' exp
   46    | exp . '-' exp
   46    | exp '-' exp .
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . '^' exp

    '*'  desplazar e ir al estado 69
    '/'  desplazar e ir al estado 70
    '^'  desplazar e ir al estado 71

    $default  reduce usando la regla 46 (exp)


Estado 88

   45 exp: exp . '+' exp
   45    | exp '+' exp .
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . '^' exp

    '*'  desplazar e ir al estado 69
    '/'  desplazar e ir al estado 70
    '^'  desplazar e ir al estado 71

    $default  reduce usando la regla 45 (exp)


Estado 89

   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   47    | exp '*' exp .
   48    | exp . '/' exp
   49    | exp . '^' exp

    '^'  desplazar e ir al estado 71

    $default  reduce usando la regla 47 (exp)


Estado 90

   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   48    | exp '/' exp .
   49    | exp . '^' exp

    '^'  desplazar e ir al estado 71

    $default  reduce usando la regla 48 (exp)


Estado 91

   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . '^' exp
   49    | exp '^' exp .

    '^'  desplazar e ir al estado 71

    $default  reduce usando la regla 49 (exp)


Estado 92

   38 bool_exp: exp '<' exp .
   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . '^' exp

    '-'  desplazar e ir al estado 67
    '+'  desplazar e ir al estado 68
    '*'  desplazar e ir al estado 69
    '/'  desplazar e ir al estado 70
    '^'  desplazar e ir al estado 71

    $default  reduce usando la regla 38 (bool_exp)


Estado 93

   39 bool_exp: exp '=' exp .
   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . '^' exp

    '-'  desplazar e ir al estado 67
    '+'  desplazar e ir al estado 68
    '*'  desplazar e ir al estado 69
    '/'  desplazar e ir al estado 70
    '^'  desplazar e ir al estado 71

    $default  reduce usando la regla 39 (bool_exp)


Estado 94

   40 bool_exp: exp '>' exp .
   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . '^' exp

    '-'  desplazar e ir al estado 67
    '+'  desplazar e ir al estado 68
    '*'  desplazar e ir al estado 69
    '/'  desplazar e ir al estado 70
    '^'  desplazar e ir al estado 71

    $default  reduce usando la regla 40 (bool_exp)


Estado 95

   36 command: WHILE $@10 bool_exp $@11 . DO commands END

    DO  desplazar e ir al estado 104


Estado 96

   21 id_seq: id_seq IDENTIFIER '[' NUMBER ']' . ','

    ','  desplazar e ir al estado 79


Estado 97

   22 id_seq: FUNCTION IDENTIFIER '(' id_seq ')' ':' INTEGER . ','

    ','  desplazar e ir al estado 105


Estado 98

   11 function: PROCEDURE IDENTIFIER '(' declaration . ')' '{' $@6 commands '}'

    ')'  desplazar e ir al estado 106


Estado 99

    5 program: GO $@1 declarations $@2 functions MAIN '{' $@3 . commands $@4 '}'

    $default  reduce usando la regla 23 (commands)

    commands  ir al estado 107


Estado 100

   29 command: IDENTIFIER '[' exp ']' ASSGNOP . exp

    NUMBER      desplazar e ir al estado 44
    IDENTIFIER  desplazar e ir al estado 45
    '('         desplazar e ir al estado 46

    $default  reduce usando la regla 41 (exp)

    exp  ir al estado 108


Estado 101

   51 exp: IDENTIFIER '(' exp ')' .

    $default  reduce usando la regla 51 (exp)


Estado 102

   44 exp: IDENTIFIER '[' exp ']' .

    $default  reduce usando la regla 44 (exp)


Estado 103

   24 commands: commands . command ';'
   33 command: IF bool_exp $@7 THEN commands . $@8 ELSE $@9 commands FI

    IDENTIFIER  desplazar e ir al estado 26
    IF          desplazar e ir al estado 27
    WHILE       desplazar e ir al estado 28
    SKIP        desplazar e ir al estado 29
    READ        desplazar e ir al estado 30
    WRITE       desplazar e ir al estado 31

    $default  reduce usando la regla 31 ($@8)

    command  ir al estado 32
    $@8      ir al estado 109


Estado 104

   36 command: WHILE $@10 bool_exp $@11 DO . commands END

    $default  reduce usando la regla 23 (commands)

    commands  ir al estado 110


Estado 105

   22 id_seq: FUNCTION IDENTIFIER '(' id_seq ')' ':' INTEGER ',' .

    $default  reduce usando la regla 22 (id_seq)


Estado 106

   11 function: PROCEDURE IDENTIFIER '(' declaration ')' . '{' $@6 commands '}'

    '{'  desplazar e ir al estado 111


Estado 107

    5 program: GO $@1 declarations $@2 functions MAIN '{' $@3 commands . $@4 '}'
   24 commands: commands . command ';'

    IDENTIFIER  desplazar e ir al estado 26
    IF          desplazar e ir al estado 27
    WHILE       desplazar e ir al estado 28
    SKIP        desplazar e ir al estado 29
    READ        desplazar e ir al estado 30
    WRITE       desplazar e ir al estado 31

    $default  reduce usando la regla 4 ($@4)

    $@4      ir al estado 112
    command  ir al estado 32


Estado 108

   29 command: IDENTIFIER '[' exp ']' ASSGNOP exp .
   45 exp: exp . '+' exp
   46    | exp . '-' exp
   47    | exp . '*' exp
   48    | exp . '/' exp
   49    | exp . '^' exp

    '-'  desplazar e ir al estado 67
    '+'  desplazar e ir al estado 68
    '*'  desplazar e ir al estado 69
    '/'  desplazar e ir al estado 70
    '^'  desplazar e ir al estado 71

    $default  reduce usando la regla 29 (command)


Estado 109

   33 command: IF bool_exp $@7 THEN commands $@8 . ELSE $@9 commands FI

    ELSE  desplazar e ir al estado 113


Estado 110

   24 commands: commands . command ';'
   36 command: WHILE $@10 bool_exp $@11 DO commands . END

    IDENTIFIER  desplazar e ir al estado 26
    IF          desplazar e ir al estado 27
    WHILE       desplazar e ir al estado 28
    SKIP        desplazar e ir al estado 29
    END         desplazar e ir al estado 114
    READ        desplazar e ir al estado 30
    WRITE       desplazar e ir al estado 31

    command  ir al estado 32


Estado 111

   11 function: PROCEDURE IDENTIFIER '(' declaration ')' '{' . $@6 commands '}'

    $default  reduce usando la regla 10 ($@6)

    $@6  ir al estado 115


Estado 112

    5 program: GO $@1 declarations $@2 functions MAIN '{' $@3 commands $@4 . '}'

    '}'  desplazar e ir al estado 116


Estado 113

   33 command: IF bool_exp $@7 THEN commands $@8 ELSE . $@9 commands FI

    $default  reduce usando la regla 32 ($@9)

    $@9  ir al estado 117


Estado 114

   36 command: WHILE $@10 bool_exp $@11 DO commands END .

    $default  reduce usando la regla 36 (command)


Estado 115

   11 function: PROCEDURE IDENTIFIER '(' declaration ')' '{' $@6 . commands '}'

    $default  reduce usando la regla 23 (commands)

    commands  ir al estado 118


Estado 116

    5 program: GO $@1 declarations $@2 functions MAIN '{' $@3 commands $@4 '}' .

    $default  reduce usando la regla 5 (program)


Estado 117

   33 command: IF bool_exp $@7 THEN commands $@8 ELSE $@9 . commands FI

    $default  reduce usando la regla 23 (commands)

    commands  ir al estado 119


Estado 118

   11 function: PROCEDURE IDENTIFIER '(' declaration ')' '{' $@6 commands . '}'
   24 commands: commands . command ';'

    IDENTIFIER  desplazar e ir al estado 26
    IF          desplazar e ir al estado 27
    WHILE       desplazar e ir al estado 28
    SKIP        desplazar e ir al estado 29
    READ        desplazar e ir al estado 30
    WRITE       desplazar e ir al estado 31
    '}'         desplazar e ir al estado 120

    command  ir al estado 32


Estado 119

   24 commands: commands . command ';'
   33 command: IF bool_exp $@7 THEN commands $@8 ELSE $@9 commands . FI

    IDENTIFIER  desplazar e ir al estado 26
    IF          desplazar e ir al estado 27
    WHILE       desplazar e ir al estado 28
    SKIP        desplazar e ir al estado 29
    FI          desplazar e ir al estado 121
    READ        desplazar e ir al estado 30
    WRITE       desplazar e ir al estado 31

    command  ir al estado 32


Estado 120

   11 function: PROCEDURE IDENTIFIER '(' declaration ')' '{' $@6 commands '}' .

    $default  reduce usando la regla 11 (function)


Estado 121

   33 command: IF bool_exp $@7 THEN commands $@8 ELSE $@9 commands FI .

    $default  reduce usando la regla 33 (command)
